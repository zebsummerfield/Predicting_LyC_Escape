import matplotlib.pyplot as plt
import matplotlib as mpl
import numpy as np
import json

folder = "optimising_model/"

with open(folder+'min_samples_leaf_optimise_data.json', 'r') as f:
    data = json.load(f)
    min_leafs = np.array(data['min_leafs'])
    mean_test_mae = np.array(data['mean_test_mae'])
    mean_test_mse = np.array(data['mean_test_mse'])
    mean_train_mae = np.array(data['mean_train_mae'])
    mean_train_mse = np.array(data['mean_train_mse'])

threshold = 5
p_diff = (mean_test_mae - mean_train_mae) / mean_test_mae
indices_thresh=np.where(p_diff<threshold*0.01)
print(f"minimum samples per leaf 5% threshold: {min(min_leafs[indices_thresh])}")

plt.style.use('./MNRAS_Style.mplstyle')
mpl.rcParams.update({'font.size': 20})
fig, ax = plt.subplots(figsize=(8, 8))

plot1 = ax.plot(min_leafs, mean_test_mae, label='Test MAE', color='orange')
plot2 = ax.plot(min_leafs, mean_train_mae, label='Train MAE', color='green')
ax.set_xlabel('Minimum Number of Samples Allowed at End Nodes')
ax.set_ylabel('Mean Absolute Error (MAE)')
ax.set_ylim(0.3, 0.5)

thresh = ax.axvline(min_leafs[indices_thresh[0][0]], linestyle='dashdot', label=f'MAE {threshold}\% threshold', c='r')

ax.set_box_aspect(1)
# add grid lines in background of graph
ax.grid(True, alpha=0.8, linestyle='--')
ax.set_axisbelow(True)
for line in ax.get_xgridlines() + ax.get_ygridlines():
    line.set_zorder(0)  # lower z-order than image

plots = [plot1[0], plot2[0], thresh]
labels = [p.get_label() for p in plots]
legend = ax.legend(plots, labels, fontsize=16, loc='lower right', bbox_to_anchor=(0.95, 0.05))
legend.get_frame().set_edgecolor('black')
legend.get_frame().set_boxstyle('Square')
legend.get_frame().set_alpha(1.0)

fig.tight_layout()
mpl.rcParams['figure.dpi'] = 500
folder = "final_graph_generation/"
fig.savefig(folder + "report_graphs/report_graph.png", bbox_inches='tight', dpi=500)
plt.show()
